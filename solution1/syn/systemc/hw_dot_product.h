// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hw_dot_product_HH_
#define _hw_dot_product_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct hw_dot_product : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<32> > a_q0;
    sc_out< sc_lv<4> > a_address1;
    sc_out< sc_logic > a_ce1;
    sc_in< sc_lv<32> > a_q1;
    sc_out< sc_lv<4> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<32> > b_q0;
    sc_out< sc_lv<4> > b_address1;
    sc_out< sc_logic > b_ce1;
    sc_in< sc_lv<32> > b_q1;
    sc_out< sc_lv<32> > out_r;
    sc_out< sc_logic > out_r_ap_vld;


    // Module declarations
    hw_dot_product(sc_module_name name);
    SC_HAS_PROCESS(hw_dot_product);

    ~hw_dot_product();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_239;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > reg_243;
    sc_signal< sc_lv<32> > reg_247;
    sc_signal< sc_lv<32> > reg_251;
    sc_signal< sc_lv<32> > grp_fu_255_p2;
    sc_signal< sc_lv<32> > reg_267;
    sc_signal< sc_lv<32> > grp_fu_261_p2;
    sc_signal< sc_lv<32> > reg_271;
    sc_signal< sc_lv<32> > reg_275;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > tmp1_fu_279_p2;
    sc_signal< sc_lv<32> > tmp1_reg_409;
    sc_signal< sc_lv<32> > tmp_1_5_reg_414;
    sc_signal< sc_lv<32> > tmp2_fu_291_p2;
    sc_signal< sc_lv<32> > tmp2_reg_439;
    sc_signal< sc_lv<32> > tmp_1_9_reg_444;
    sc_signal< sc_lv<32> > tmp4_fu_313_p2;
    sc_signal< sc_lv<32> > tmp4_reg_449;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > tmp3_fu_285_p2;
    sc_signal< sc_lv<32> > tmp7_fu_302_p2;
    sc_signal< sc_lv<32> > tmp6_fu_307_p2;
    sc_signal< sc_lv<32> > tmp5_fu_297_p2;
    sc_signal< sc_lv<32> > tmp_fu_319_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_address1();
    void thread_a_ce0();
    void thread_a_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_address1();
    void thread_b_ce0();
    void thread_b_ce1();
    void thread_grp_fu_255_p2();
    void thread_grp_fu_261_p2();
    void thread_out_r();
    void thread_out_r_ap_vld();
    void thread_tmp1_fu_279_p2();
    void thread_tmp2_fu_291_p2();
    void thread_tmp3_fu_285_p2();
    void thread_tmp4_fu_313_p2();
    void thread_tmp5_fu_297_p2();
    void thread_tmp6_fu_307_p2();
    void thread_tmp7_fu_302_p2();
    void thread_tmp_fu_319_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
